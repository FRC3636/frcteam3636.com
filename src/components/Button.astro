---
import type { HTMLAttributes } from "astro/types";

type Theme = "primary" | "secondary" | "dark-transparent";
type Size = "large" | "small";
interface Props extends HTMLAttributes<"a"> {
    theme?: Theme;
    size?: Size;
}

const { theme = "secondary", size = "large", class: className, ...rest } = Astro.props;
---
<a class:list={["button", className]} target="_blank" data-theme={theme} data-size={size} {...rest}>
    <slot />
</a>

<style lang="scss">
    .button {
        // Styling
        color: var(--primary);
        background-color: var(--bg-secondary);
        margin: 0.2rem;
        font-size: 1rem;
        padding: 0.5rem;
        border-radius: 0.5rem;
        font-weight: bold;
        cursor: pointer;
        text-decoration-color: currentColor;

        border: var(--border-secondary);

        // Layout
        display: inline-flex;
        gap: 10px;
        align-items: center;
        text-transform: capitalize;

        &[data-theme="dark-transparent"] {
            --primary: var(--col-white);
            --bg-secondary: var(--col-dark);
            background-color: color-mix(in srgb, var(--bg-secondary) 60%, transparent);
        }

        &[data-theme="primary"] {
            background-color: var(--accent);
            color: var(--col-white);
            // Keeping an invisible border prevents layout change between primary/secondary styles.
            border-color: transparent;
        }

        &[data-size="large"] {
            @media (min-width: 800px) {
                margin: 0.5rem;
                padding: 0.75rem;
                font-size: 1rem;
            }
        }
    }
</style>
---
import type { IconDefinition } from "@fortawesome/free-brands-svg-icons";
import { icon } from "@fortawesome/fontawesome-svg-core";
import type { HTMLAttributes } from "astro/types";

type IconWidth = "fixed" | "variable";
interface Props extends HTMLAttributes<"span"> {
    symbol: IconDefinition | typeof import("*.svg").default;
    width?: IconWidth;
    larger?: boolean;
}

const { symbol, width = "fixed", larger, ...rest } = Astro.props;

const Component = symbol;
---

<span class:list={["icon", rest.class]} data-larger={larger} {...rest}>
    {
        "src" in symbol ? (
            <Component />
        ) : (
            <Fragment set:html={icon(symbol).html} />
        )
    }
</span>

<style>
    .icon {
        display: contents;

        &[data-larger="true"] {
            font-size: 1.25em;
        }

        > :not(.svg-inline--fa) {
            height: 0.8em;
            vertical-align: baseline;
        }
    }

    :global(.svg-inline--fa) {
        overflow: visible;
        box-sizing: content-box;
        display: inline-block;
        height: 0.8em;
        aspect-ratio: 1 / 1;
        vertical-align: -0.125em;
    }
</style>
